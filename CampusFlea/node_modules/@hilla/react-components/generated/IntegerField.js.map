{"version":3,"file":"IntegerField.js","sourceRoot":"","sources":["../src/generated/IntegerField.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,IAAI,mBAAmB,GAAuD,MAAM,+CAA+C,CAAC;AACzJ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AACjF,cAAc,+CAA+C,CAAC;AAC9D,OAAO,EAAE,mBAAmB,GAAG,CAAC;AAQhC,MAAM,MAAM,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAA0B,CAAC;AAEhL,MAAM,CAAC,MAAM,YAAY,GAAG,eAAe,CAAC;IACxC,YAAY,EAAE,mBAAmB,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,sBAAsB;CAC3F,CAAC,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport { IntegerField as IntegerFieldElement, type IntegerFieldEventMap as _IntegerFieldEventMap, } from \"@vaadin/integer-field/vaadin-integer-field.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport * from \"@vaadin/integer-field/vaadin-integer-field.js\";\nexport { IntegerFieldElement, };\nexport type IntegerFieldEventMap = Readonly<{\n    onValidated: EventName<_IntegerFieldEventMap[\"validated\"]>;\n    onChange: EventName<_IntegerFieldEventMap[\"change\"]>;\n    onInput: EventName<_IntegerFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_IntegerFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_IntegerFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as IntegerFieldEventMap;\nexport type IntegerFieldProps = WebComponentProps<IntegerFieldElement, IntegerFieldEventMap>;\nexport const IntegerField = createComponent({\n    elementClass: IntegerFieldElement, events, react: React, tagName: \"vaadin-integer-field\"\n});\n"]}