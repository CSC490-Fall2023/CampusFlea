{"version":3,"file":"GridPro.js","sourceRoot":"","sources":["../src/generated/GridPro.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,IAAI,cAAc,GAA6C,MAAM,qCAAqC,CAAC;AAC3H,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AACjF,cAAc,qCAAqC,CAAC;AACpD,OAAO,EAAE,cAAc,GAAG,CAAC;AAoB3B,MAAM,MAAM,GAAG,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,gBAAgB,EAAE,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,aAAa,EAAE,cAAc,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,0BAA0B,EAA8B,CAAC;AAE3sB,MAAM,CAAC,MAAM,OAAO,GAAG,eAAe,CAAC;IACnC,YAAY,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,iBAAiB;CACjF,CAAyG,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport { GridPro as GridProElement, type GridProEventMap as _GridProEventMap, } from \"@vaadin/grid-pro/vaadin-grid-pro.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport * from \"@vaadin/grid-pro/vaadin-grid-pro.js\";\nexport { GridProElement, };\nexport type GridProEventMap<T1> = Readonly<{\n    onActiveItemChanged: EventName<_GridProEventMap<T1>[\"active-item-changed\"]>;\n    onCellActivate: EventName<_GridProEventMap<T1>[\"cell-activate\"]>;\n    onColumnResize: EventName<_GridProEventMap<T1>[\"column-resize\"]>;\n    onExpandedItemsChanged: EventName<_GridProEventMap<T1>[\"expanded-items-changed\"]>;\n    onLoadingChanged: EventName<_GridProEventMap<T1>[\"loading-changed\"]>;\n    onSelectedItemsChanged: EventName<_GridProEventMap<T1>[\"selected-items-changed\"]>;\n    onCellFocus: EventName<_GridProEventMap<T1>[\"cell-focus\"]>;\n    onColumnReorder: EventName<_GridProEventMap<T1>[\"column-reorder\"]>;\n    onGridDragend: EventName<_GridProEventMap<T1>[\"grid-dragend\"]>;\n    onGridDragstart: EventName<_GridProEventMap<T1>[\"grid-dragstart\"]>;\n    onGridDrop: EventName<_GridProEventMap<T1>[\"grid-drop\"]>;\n    onCellEditStarted: EventName<_GridProEventMap<T1>[\"cell-edit-started\"]>;\n    onItemPropertyChanged: EventName<_GridProEventMap<T1>[\"item-property-changed\"]>;\n    onSizeChanged: EventName<CustomEvent<unknown>>;\n    onDataProviderChanged: EventName<CustomEvent<unknown>>;\n    onEnterNextRowChanged: EventName<CustomEvent<unknown>>;\n    onSingleCellEditChanged: EventName<CustomEvent<unknown>>;\n}>;\nconst events = { onActiveItemChanged: \"active-item-changed\", onCellActivate: \"cell-activate\", onColumnResize: \"column-resize\", onExpandedItemsChanged: \"expanded-items-changed\", onLoadingChanged: \"loading-changed\", onSelectedItemsChanged: \"selected-items-changed\", onCellFocus: \"cell-focus\", onColumnReorder: \"column-reorder\", onGridDragend: \"grid-dragend\", onGridDragstart: \"grid-dragstart\", onGridDrop: \"grid-drop\", onCellEditStarted: \"cell-edit-started\", onItemPropertyChanged: \"item-property-changed\", onSizeChanged: \"size-changed\", onDataProviderChanged: \"data-provider-changed\", onEnterNextRowChanged: \"enter-next-row-changed\", onSingleCellEditChanged: \"single-cell-edit-changed\" } as GridProEventMap<unknown>;\nexport type GridProProps<T1> = WebComponentProps<GridProElement<T1>, GridProEventMap<T1>>;\nexport const GridPro = createComponent({\n    elementClass: GridProElement, events, react: React, tagName: \"vaadin-grid-pro\"\n}) as <T1>(props: GridProProps<T1> & React.RefAttributes<GridProElement<T1>>) => React.ReactElement | null;\n"]}