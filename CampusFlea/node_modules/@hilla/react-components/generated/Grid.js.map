{"version":3,"file":"Grid.js","sourceRoot":"","sources":["../src/generated/Grid.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,IAAI,WAAW,GAAuC,MAAM,6BAA6B,CAAC;AACvG,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AACjF,cAAc,6BAA6B,CAAC;AAC5C,OAAO,EAAE,WAAW,GAAG,CAAC;AAgBxB,MAAM,MAAM,GAAG,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,gBAAgB,EAAE,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,qBAAqB,EAAE,uBAAuB,EAA2B,CAAC;AAE1gB,MAAM,CAAC,MAAM,IAAI,GAAG,eAAe,CAAC;IAChC,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa;CAC1E,CAAmG,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport { Grid as GridElement, type GridEventMap as _GridEventMap, } from \"@vaadin/grid/vaadin-grid.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport * from \"@vaadin/grid/vaadin-grid.js\";\nexport { GridElement, };\nexport type GridEventMap<T1> = Readonly<{\n    onActiveItemChanged: EventName<_GridEventMap<T1>[\"active-item-changed\"]>;\n    onCellActivate: EventName<_GridEventMap<T1>[\"cell-activate\"]>;\n    onColumnResize: EventName<_GridEventMap<T1>[\"column-resize\"]>;\n    onExpandedItemsChanged: EventName<_GridEventMap<T1>[\"expanded-items-changed\"]>;\n    onLoadingChanged: EventName<_GridEventMap<T1>[\"loading-changed\"]>;\n    onSelectedItemsChanged: EventName<_GridEventMap<T1>[\"selected-items-changed\"]>;\n    onCellFocus: EventName<_GridEventMap<T1>[\"cell-focus\"]>;\n    onColumnReorder: EventName<_GridEventMap<T1>[\"column-reorder\"]>;\n    onGridDragend: EventName<_GridEventMap<T1>[\"grid-dragend\"]>;\n    onGridDragstart: EventName<_GridEventMap<T1>[\"grid-dragstart\"]>;\n    onGridDrop: EventName<_GridEventMap<T1>[\"grid-drop\"]>;\n    onSizeChanged: EventName<CustomEvent<unknown>>;\n    onDataProviderChanged: EventName<CustomEvent<unknown>>;\n}>;\nconst events = { onActiveItemChanged: \"active-item-changed\", onCellActivate: \"cell-activate\", onColumnResize: \"column-resize\", onExpandedItemsChanged: \"expanded-items-changed\", onLoadingChanged: \"loading-changed\", onSelectedItemsChanged: \"selected-items-changed\", onCellFocus: \"cell-focus\", onColumnReorder: \"column-reorder\", onGridDragend: \"grid-dragend\", onGridDragstart: \"grid-dragstart\", onGridDrop: \"grid-drop\", onSizeChanged: \"size-changed\", onDataProviderChanged: \"data-provider-changed\" } as GridEventMap<unknown>;\nexport type GridProps<T1> = WebComponentProps<GridElement<T1>, GridEventMap<T1>>;\nexport const Grid = createComponent({\n    elementClass: GridElement, events, react: React, tagName: \"vaadin-grid\"\n}) as <T1>(props: GridProps<T1> & React.RefAttributes<GridElement<T1>>) => React.ReactElement | null;\n"]}