import { createComponent as _createComponent, } from '@lit-labs/react';
const $wnd = window;
$wnd.Vaadin = $wnd.Vaadin || {};
$wnd.Vaadin.registrations = $wnd.Vaadin.registrations || [];
$wnd.Vaadin.registrations.push({
    is: '@hilla/react-components',
    version: /* updated-by-script */ '2.1.7',
});
export function createComponent(options) {
    const { elementClass } = options;
    return _createComponent('_properties' in elementClass
        ? {
            ...options,
            // TODO: improve or remove the Polymer workaround
            // 'createComponent' relies on key presence on the custom element class,
            // but Polymer defines properties on the prototype when the first element
            // is created. Workaround: pass a mock object with properties in
            // the prototype.
            elementClass: {
                // @ts-expect-error: it is a specific workaround for Polymer classes.
                name: elementClass.name,
                prototype: elementClass._properties,
            },
        }
        : options);
}
//# sourceMappingURL=createComponent.js.map