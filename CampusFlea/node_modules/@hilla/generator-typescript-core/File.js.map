{"version":3,"file":"File.js","sourceRoot":"","sources":["src/File.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAoB,MAAM,aAAa,CAAC;AASrD,MAAM,CAAC,OAAO,OAAO,IAAK,SAAQ,IAAI;IAC3B,KAAK,CAAS;IAEvB,YAAY,QAAkC,EAAE,QAAgB,EAAE,OAAqB;QACrF,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IACxB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF","sourcesContent":["import { Blob, type BlobOptions } from 'node:buffer';\nimport type { BinaryLike } from 'node:crypto';\n\nexport type FileOptions = Readonly<\n  BlobOptions & {\n    lastModified?: number;\n  }\n>;\n\nexport default class File extends Blob {\n  readonly #name: string;\n\n  constructor(fileBits: Array<BinaryLike | Blob>, fileName: string, options?: FileOptions) {\n    super(fileBits, options);\n    this.#name = fileName;\n  }\n\n  get name(): string {\n    return this.#name;\n  }\n}\n"]}