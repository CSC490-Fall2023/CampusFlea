{"version":3,"file":"Models.js","sourceRoot":"","sources":["src/Models.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: Fix dependency cycle\n\nimport isNumeric from 'validator/es/lib/isNumeric.js';\n// eslint-disable-next-line import/no-cycle\nimport { BinderNode } from './BinderNode.js';\nimport type { Validator } from './Validation.js';\nimport { IsNumber } from './Validators.js';\n\nexport const _ItemModel = Symbol('ItemModel');\nexport const _parent = Symbol('parent');\nexport const _key = Symbol('key');\nexport const _fromString = Symbol('fromString');\nexport const _validators = Symbol('validators');\nexport const _binderNode = Symbol('binderNode');\nexport const _getPropertyModel = Symbol('getPropertyModel');\nexport const _enum = Symbol('enum');\n\nconst _properties = Symbol('properties');\nconst _optional = Symbol('optional');\n\nexport function getBinderNode<M extends AbstractModel<any>, T = ModelValue<M>>(model: M): BinderNode<T, M> {\n  if (!model[_binderNode]) {\n    model[_binderNode] = new BinderNode(model);\n  }\n\n  return model[_binderNode]!;\n}\n\nexport interface HasFromString<T> {\n  [_fromString](value: string): T;\n}\n\nexport function hasFromString<T>(model: AbstractModel<T>): model is AbstractModel<T> & HasFromString<T> {\n  return _fromString in model;\n}\n\nexport interface HasValue<T> {\n  value?: T;\n}\n\nexport type ModelParent<T> = AbstractModel<any> | HasValue<T>;\nexport type ModelValue<M extends AbstractModel<any>> = ReturnType<M['valueOf']>;\n\nexport interface ModelConstructor<T, M extends AbstractModel<T>> {\n  createEmptyValue(): T;\n  new (parent: ModelParent<T>, key: keyof any, optional: boolean, ...args: any[]): M;\n}\n\ntype ModelVariableArguments<C extends ModelConstructor<any, AbstractModel<any>>> = C extends new (\n  parent: ModelParent<any>,\n  key: keyof any,\n  ...args: infer R\n) => any\n  ? R\n  : never;\n\nexport abstract class AbstractModel<T> {\n  static createEmptyValue(): unknown {\n    return undefined;\n  }\n\n  declare readonly ['constructor']: typeof AbstractModel;\n\n  readonly [_parent]: ModelParent<T>;\n\n  readonly [_validators]: ReadonlyArray<Validator<T>>;\n\n  readonly [_optional]: boolean;\n\n  [_binderNode]?: BinderNode<T, this>;\n\n  [_key]: keyof any;\n\n  constructor(parent: ModelParent<T>, key: keyof any, optional: boolean, ...validators: ReadonlyArray<Validator<T>>) {\n    this[_parent] = parent;\n    this[_key] = key;\n    this[_optional] = optional;\n    this[_validators] = validators;\n  }\n\n  toString() {\n    return String(this.valueOf());\n  }\n\n  valueOf(): T {\n    const { value } = getBinderNode(this);\n    if (value === undefined) {\n      throw new TypeError('Value is undefined');\n    }\n    return value;\n  }\n}\n\nexport abstract class PrimitiveModel<T> extends AbstractModel<T> {}\n\nexport class BooleanModel extends PrimitiveModel<boolean> implements HasFromString<boolean> {\n  static override createEmptyValue = Boolean;\n\n  [_fromString](str: string): boolean {\n    // This implementation matches the values accepted by validator.js and converts all other values to false\n    // See https://github.com/validatorjs/validator.js/blob/master/src/lib/isBoolean.js\n    return ['true', '1', 'yes'].includes(str.toLowerCase());\n  }\n}\n\nexport class NumberModel extends PrimitiveModel<number> implements HasFromString<number | undefined> {\n  static override createEmptyValue = Number;\n\n  constructor(\n    parent: ModelParent<number>,\n    key: keyof any,\n    optional: boolean,\n    ...validators: ReadonlyArray<Validator<number>>\n  ) {\n    // Prepend a built-in validator to indicate NaN input\n    super(parent, key, optional, new IsNumber(optional), ...validators);\n  }\n\n  [_fromString](str: string): number | undefined {\n    // Returning undefined is needed to support passing the validation when the value of an optional number field is\n    // an empty string\n    if (str === '') return undefined;\n    return isNumeric(str) ? Number.parseFloat(str) : NaN;\n  }\n}\n\nexport class StringModel extends PrimitiveModel<string> implements HasFromString<string> {\n  static override createEmptyValue = String;\n\n  [_fromString] = String;\n}\n\ndeclare enum Enum {}\n\nexport abstract class EnumModel<E extends typeof Enum>\n  extends AbstractModel<E[keyof E]>\n  implements HasFromString<E[keyof E] | undefined>\n{\n  static override createEmptyValue() {\n    if (this === EnumModel) {\n      throw new Error('Cannot create an instance of an abstract class');\n    }\n\n    // @ts-expect-error: the instantiation of the abstract class is handled above.\n    // Now only the children instantiation could happen.\n    const { [_enum]: enumObject } = new this({ value: undefined }, 'value', false);\n\n    return Object.values(enumObject)[0];\n  }\n\n  abstract readonly [_enum]: E;\n\n  [_fromString](value: string): E[keyof E] | undefined {\n    return value in this[_enum] ? (value as E[keyof E]) : undefined;\n  }\n}\n\nexport class ObjectModel<T> extends AbstractModel<T> {\n  static *getOwnAndParentGetters<M extends ObjectModel<any>>(\n    model: M,\n  ): Generator<readonly [key: string, getter: () => unknown]> {\n    for (\n      let proto = Object.getPrototypeOf(model);\n      proto !== ObjectModel.prototype;\n      proto = Object.getPrototypeOf(proto)\n    ) {\n      const descriptors = Object.getOwnPropertyDescriptors(proto);\n      for (const [name, { get }] of Object.entries(descriptors)) {\n        if (get) {\n          yield [name, get];\n        }\n      }\n    }\n  }\n\n  static override createEmptyValue() {\n    const model = new this({ value: undefined }, 'value', false);\n    const obj: Record<string, unknown> = {};\n\n    // Iterate the model class hierarchy up to the ObjectModel, and extract\n    // the property getter names from every prototypes\n    for (const [key, getter] of this.getOwnAndParentGetters(model)) {\n      const propertyModel = getter.call(model) as AbstractModel<any>;\n      obj[key] = propertyModel[_optional] ? undefined : propertyModel.constructor.createEmptyValue();\n    }\n\n    return obj as unknown;\n  }\n\n  private [_properties]: { [name in keyof T]?: AbstractModel<T[name]> } = {};\n\n  protected [_getPropertyModel]<\n    N extends keyof T,\n    C extends new (parent: ModelParent<NonNullable<T[N]>>, key: keyof any, optional: boolean, ...args: any[]) => any,\n  >(name: N, ValueModel: C, valueModelArgs: any[]): InstanceType<C> {\n    const [optional, ...rest] = valueModelArgs;\n\n    if (this[_properties][name] === undefined) {\n      this[_properties][name] = new ValueModel(this, name, optional, ...rest);\n    }\n\n    return this[_properties][name] as InstanceType<C>;\n  }\n}\n\nexport class ArrayModel<T, M extends AbstractModel<T>> extends AbstractModel<readonly T[]> {\n  static override createEmptyValue() {\n    return [] as readonly unknown[];\n  }\n\n  private readonly [_ItemModel]: ModelConstructor<T, M>;\n\n  private readonly itemModelArgs: readonly any[];\n\n  private readonly itemModels: M[] = [];\n\n  constructor(\n    parent: ModelParent<readonly T[]>,\n    key: keyof any,\n    optional: boolean,\n    ItemModel: ModelConstructor<T, M>,\n    itemModelArgs: ModelVariableArguments<typeof ItemModel>,\n    ...validators: ReadonlyArray<Validator<readonly T[]>>\n  ) {\n    super(parent, key, optional, ...validators);\n    this[_ItemModel] = ItemModel;\n    this.itemModelArgs = itemModelArgs;\n  }\n\n  /**\n   * Iterates the current array value and yields a binder node for every item.\n   */\n  *[Symbol.iterator](): IterableIterator<BinderNode<T, M>> {\n    const array = this.valueOf();\n    const ItemModel = this[_ItemModel];\n    if (array.length !== this.itemModels.length) {\n      this.itemModels.length = array.length;\n    }\n    for (const i of array.keys()) {\n      let itemModel = this.itemModels[i];\n      if (!itemModel) {\n        const [optional, ...rest] = this.itemModelArgs;\n        itemModel = new ItemModel(this, i, optional, ...rest);\n        this.itemModels[i] = itemModel;\n      }\n      yield getBinderNode(itemModel);\n    }\n  }\n}\n"]}