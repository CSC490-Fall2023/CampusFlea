import{ConnectionIndicator as y,ConnectionState as l}from"@vaadin/common-frontend";import{getCsrfTokenHeadersForEndpointRequest as h}from"./CsrfUtils.js";import{EndpointError as E,EndpointResponseError as M,EndpointValidationError as b,ForbiddenResponseError as S,UnauthorizedResponseError as R}from"./EndpointErrors.js";import{FluxConnection as T}from"./FluxConnection.js";const o=window;o.Vaadin??={},o.Vaadin.registrations??=[],o.Vaadin.registrations.push({is:"endpoint"});const V=async r=>{if(!r.ok){const t=await r.text();let n;try{n=JSON.parse(t)}catch{n=null}const i=n?.message??t.length>0?t:`expected "200 OK" response, but got ${r.status} ${r.statusText}`,s=n?.type;if(n?.validationErrorData)throw new b(i,n.validationErrorData,s);if(s)throw new E(i,s,n?.detail);switch(r.status){case 401:throw new R(i,r);case 403:throw new S(i,r);default:throw new M(i,r)}}};function p(){return o.Vaadin?.Flow?.clients?.TypeScript!==void 0}class D{middlewares=[];prefix="/connect";#e;constructor(t={}){t.prefix&&(this.prefix=t.prefix),t.middlewares&&(this.middlewares=t.middlewares),y.create(),addEventListener("online",()=>{!p()&&o.Vaadin?.connectionState&&(o.Vaadin.connectionState.state=l.CONNECTED)}),addEventListener("offline",()=>{!p()&&o.Vaadin?.connectionState&&(o.Vaadin.connectionState.state=l.CONNECTION_LOST)})}get fluxConnection(){return this.#e||(this.#e=new T(this.prefix)),this.#e}async call(t,n,i,s){if(arguments.length<2)throw new TypeError(`2 arguments required, but got only ${arguments.length}`);const w={Accept:"application/json","Content-Type":"application/json",...h(document)},f=new Request(`${this.prefix}/${t}/${n}`,{body:i!==void 0?JSON.stringify(i,(a,e)=>e===void 0?null:e):void 0,headers:w,method:"POST"}),x={endpoint:t,method:n,params:i,request:f};async function g(a,e){const d=await e(a);await V(d);const m=await d.text();return JSON.parse(m,(O,c)=>c===null?void 0:c)}async function C(a){o.Vaadin?.connectionState?.loadingStarted();try{const e=await fetch(a.request,{signal:s?.signal});return o.Vaadin?.connectionState?.loadingFinished(),e}catch(e){return e instanceof Error&&e.name==="AbortError"?o.Vaadin?.connectionState?.loadingFinished():o.Vaadin?.connectionState?.loadingFailed(),Promise.reject(e)}}return[g,...this.middlewares].reduceRight((a,e)=>async d=>typeof e=="function"?e(d,a):e.invoke(d,a),C)(x)}subscribe(t,n,i){return this.fluxConnection.subscribe(t,n,i?Object.values(i):[])}}export{D as ConnectClient};
//# sourceMappingURL=Connect.js.map
