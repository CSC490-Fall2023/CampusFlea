{
  "version": 3,
  "sources": ["src/EndpointErrors.ts"],
  "sourcesContent": ["/**\n * An exception that gets thrown when the Vaadin backend responds\n * with not ok status.\n */\nexport class EndpointError extends Error {\n  /**\n   * The optional detail object, containing additional information sent\n   * from the backend\n   */\n  detail?: unknown;\n  /**\n   * The optional name of the exception that was thrown on a backend\n   */\n  type?: string;\n\n  /**\n   * @param message - the `message` property value\n   * @param type - the `type` property value\n   * @param detail - the `detail` property value\n   */\n  constructor(message: string, type?: string, detail?: unknown) {\n    super(message);\n    this.type = type;\n    this.detail = detail;\n  }\n}\n\n/**\n * An exception that gets thrown if Vaadin endpoint responds\n * with non-ok status and provides additional info\n * on the validation errors occurred.\n */\nexport class EndpointValidationError extends EndpointError {\n  /**\n   * An array of the validation errors.\n   */\n  validationErrorData: ValidationErrorData[];\n  /**\n   * An original validation error message.\n   */\n  validationErrorMessage: string;\n\n  /**\n   * @param message - the `message` property value\n   * @param validationErrorData - the `validationErrorData` property value\n   * @param type - the `type` property value\n   */\n  constructor(message: string, validationErrorData: ValidationErrorData[], type?: string) {\n    super(message, type, validationErrorData);\n    this.validationErrorMessage = message;\n    this.detail = null;\n    this.validationErrorData = validationErrorData;\n  }\n}\n\n/**\n * An exception that gets thrown for unexpected HTTP response.\n */\nexport class EndpointResponseError extends EndpointError {\n  /**\n   * The optional response object, containing the HTTP response error\n   */\n  response: Response;\n\n  /**\n   * @param message - the `message` property value\n   * @param response - the `response` property value\n   */\n  constructor(message: string, response: Response) {\n    super(message, 'EndpointResponseError', response);\n    this.response = response;\n  }\n\n  /**\n   * Convenience property to get the HTTP code status directly\n   */\n  get status(): number {\n    return this.response.status;\n  }\n}\n\nexport class UnauthorizedResponseError extends EndpointResponseError {\n  constructor(message: string, response: Response) {\n    super(message, response);\n    this.type = 'UnauthorizedResponseError';\n  }\n}\n\nexport class ForbiddenResponseError extends EndpointResponseError {\n  constructor(message: string, response: Response) {\n    super(message, response);\n    this.type = 'ForbiddenResponseError';\n  }\n}\n\n/**\n * An object, containing all data for the particular validation error.\n */\nexport class ValidationErrorData {\n  /**\n   * The validation error message.\n   */\n  message: string;\n\n  /**\n   * The parameter name that caused the validation error.\n   */\n  parameterName?: string;\n\n  /**\n   * @param message - The `message` property value\n   * @param parameterName - The `parameterName` property value\n   */\n  constructor(message: string, parameterName?: string) {\n    this.message = message;\n    this.parameterName = parameterName;\n  }\n}\n"],
  "mappings": "AAIO,MAAMA,UAAsB,KAAM,CAKvC,OAIA,KAOA,YAAYC,EAAiBC,EAAeC,EAAkB,CAC5D,MAAMF,CAAO,EACb,KAAK,KAAOC,EACZ,KAAK,OAASC,CAChB,CACF,CAOO,MAAMC,UAAgCJ,CAAc,CAIzD,oBAIA,uBAOA,YAAYC,EAAiBI,EAA4CH,EAAe,CACtF,MAAMD,EAASC,EAAMG,CAAmB,EACxC,KAAK,uBAAyBJ,EAC9B,KAAK,OAAS,KACd,KAAK,oBAAsBI,CAC7B,CACF,CAKO,MAAMC,UAA8BN,CAAc,CAIvD,SAMA,YAAYC,EAAiBM,EAAoB,CAC/C,MAAMN,EAAS,wBAAyBM,CAAQ,EAChD,KAAK,SAAWA,CAClB,CAKA,IAAI,QAAiB,CACnB,OAAO,KAAK,SAAS,MACvB,CACF,CAEO,MAAMC,UAAkCF,CAAsB,CACnE,YAAYL,EAAiBM,EAAoB,CAC/C,MAAMN,EAASM,CAAQ,EACvB,KAAK,KAAO,2BACd,CACF,CAEO,MAAME,UAA+BH,CAAsB,CAChE,YAAYL,EAAiBM,EAAoB,CAC/C,MAAMN,EAASM,CAAQ,EACvB,KAAK,KAAO,wBACd,CACF,CAKO,MAAMG,CAAoB,CAI/B,QAKA,cAMA,YAAYT,EAAiBU,EAAwB,CACnD,KAAK,QAAUV,EACf,KAAK,cAAgBU,CACvB,CACF",
  "names": ["EndpointError", "message", "type", "detail", "EndpointValidationError", "validationErrorData", "EndpointResponseError", "response", "UnauthorizedResponseError", "ForbiddenResponseError", "ValidationErrorData", "parameterName"]
}
