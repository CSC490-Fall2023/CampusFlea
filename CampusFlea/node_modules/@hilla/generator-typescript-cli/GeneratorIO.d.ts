import type File from '@hilla/generator-typescript-core/File.js';
import { type PluginConstructor } from '@hilla/generator-typescript-core/Plugin.js';
import type LoggerFactory from '@hilla/generator-typescript-utils/LoggerFactory.js';
export default class GeneratorIO {
    #private;
    static readonly INDEX_FILENAME = "generated-file-list.txt";
    ['constructor']: typeof GeneratorIO;
    readonly cwd: string;
    constructor(outputDir: string, logger: LoggerFactory);
    /**
     * Cleans the output directory by removing all files that had been generated last time.
     * A list of those files is found in {@link INDEX_FILENAME}.
     * @return a set containing deleted filenames
     */
    cleanOutputDir(): Promise<Set<string>>;
    createFileIndex(filenames: string[]): Promise<void>;
    /**
     * Checks that a file exists (is visible)
     * @param path the file path to check
     */
    exists(path: string): Promise<boolean>;
    loadPlugin(modulePath: string): Promise<PluginConstructor>;
    read(path: string): Promise<string>;
    write(file: File): Promise<void>;
}
//# sourceMappingURL=GeneratorIO.d.ts.map