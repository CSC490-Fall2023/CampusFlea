{"version":3,"file":"index.js","sourceRoot":"","sources":["src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  _fromString,\n  _validity,\n  type AbstractModel,\n  type BinderConfiguration,\n  BinderRoot,\n  CHANGED,\n  defaultValidity,\n  getBinderNode,\n  getDefaultFieldStrategy,\n  hasFromString,\n  isFieldElement,\n  type ModelConstructor,\n  type Validator,\n  type ValueError,\n  type FieldStrategy,\n} from '@hilla/form';\nimport type { BinderNode } from '@hilla/form/BinderNode.js';\nimport { useEffect, useMemo, useReducer, useRef } from 'react';\n\n\nconst $wnd = window as any;\n\n$wnd.Vaadin ??= {};\n$wnd.Vaadin.registrations ??= [];\n$wnd.Vaadin.registrations.push({\n  is: '@hilla/react-form',\n  version: /* updated-by-script */ '2.2.0',\n});\n\nfunction useUpdate() {\n  const [_, update] = useReducer((x) => ++x, 0);\n  return update;\n}\n\nexport type FieldDirectiveResult = Readonly<{\n  name: string;\n  onBlur(): void;\n  onChange(): void;\n  onInput(): void;\n  ref(element: HTMLElement | null): void;\n}>;\n\nexport type FieldDirective = (model: AbstractModel<any>) => FieldDirectiveResult;\n\nexport type UseFormPartResult<T, M extends AbstractModel<T>> = Readonly<{\n  defaultValue: T;\n  dirty: boolean;\n  errors: ReadonlyArray<ValueError<unknown>>;\n  invalid: boolean;\n  model: M;\n  name: string;\n  field: FieldDirective;\n  ownErrors: ReadonlyArray<ValueError<T>>;\n  required: boolean;\n  validators: ReadonlyArray<Validator<T>>;\n  value?: T;\n  visited: boolean;\n  addValidator(validator: Validator<T>): void;\n  setValidators(validators: ReadonlyArray<Validator<T>>): void;\n  setValue(value: T | undefined): void;\n  setVisited(visited: boolean): void;\n  validate(): Promise<ReadonlyArray<ValueError<unknown>>>;\n}>;\n\nexport type UseFormResult<T, M extends AbstractModel<T>> = Readonly<{\n  value: T;\n  setDefaultValue(value: T): void;\n  setValue(value: T): void;\n  submit(): Promise<T | undefined>;\n  reset(): void;\n  clear(): void;\n  read(value: T | undefined | null): void;\n}> &\n  UseFormPartResult<T, M>;\n\ntype FieldState<T> = {\n  value?: T;\n  required: boolean;\n  invalid: boolean;\n  errorMessage: string;\n  strategy?: FieldStrategy<T>;\n  element?: HTMLElement;\n  updateValue(): void;\n  markVisited(): void;\n  ref(element: HTMLElement | null): void;\n};\n\nfunction convertFieldValue<T extends AbstractModel<unknown>>(model: T, fieldValue: unknown) {\n  return typeof fieldValue === 'string' && hasFromString(model) ? model[_fromString](fieldValue) : fieldValue;\n}\n\nfunction getFormPart<T, M extends AbstractModel<T>>(node: BinderNode<T, M>): Omit<UseFormPartResult<T, M>, 'field'> {\n  return {\n    addValidator: node.addValidator.bind(node),\n    defaultValue: node.defaultValue,\n    dirty: node.dirty,\n    errors: node.errors,\n    invalid: node.invalid,\n    model: node.model,\n    name: node.name,\n    ownErrors: node.ownErrors,\n    required: node.required,\n    setValidators(validators) {\n      node.validators = validators;\n    },\n    setValue(value) {\n      node.value = value;\n    },\n    setVisited(visited: boolean) {\n      node.visited = visited;\n    },\n    validate: node.validate.bind(node),\n    validators: node.validators,\n    value: node.value,\n    visited: node.visited,\n  };\n}\n\nfunction useFields<T, M extends AbstractModel<T>>(node: BinderNode<T, M>): FieldDirective {\n  return useMemo(() => {\n    const registry = new WeakMap<AbstractModel<any>, FieldState<any>>();\n\n    return ((model: AbstractModel<any>) => {\n      const n = getBinderNode(model);\n      n.initializeValue(true);\n\n      const fieldState: FieldState<unknown> = registry.get(model) ?? {\n        element: undefined,\n        errorMessage: '',\n        invalid: false,\n        markVisited: () => {\n          n.visited = true;\n        },\n        ref(element: HTMLElement | null) {\n          if (!element) {\n            fieldState.element?.removeEventListener('change', fieldState.updateValue);\n            fieldState.element?.removeEventListener('input', fieldState.updateValue);\n            fieldState.element?.removeEventListener('blur', fieldState.markVisited);\n            fieldState.strategy?.removeEventListeners();\n            fieldState.element = undefined;\n            fieldState.strategy = undefined;\n            return;\n          }\n\n          if (!isFieldElement(element)) {\n            throw new TypeError(`Element '${element.localName}' is not a form element`);\n          }\n\n          if (fieldState.element !== element) {\n            fieldState.element = element;\n            fieldState.element.addEventListener('change', fieldState.updateValue);\n            fieldState.element.addEventListener('input', fieldState.updateValue);\n            fieldState.element.addEventListener('blur', fieldState.markVisited);\n            fieldState.strategy = getDefaultFieldStrategy(element, model);\n          }\n        },\n        required: false,\n        strategy: undefined,\n        updateValue: () => {\n          if (fieldState.strategy) {\n            // Remove invalid flag, so that .checkValidity() in Vaadin Components\n            // does not interfere with errors from Hilla.\n            fieldState.strategy.invalid = false;\n            // When bad input is detected, skip reading new value in binder state\n            fieldState.strategy.checkValidity();\n            if (!fieldState.strategy.validity.badInput) {\n              fieldState.value = fieldState.strategy.value;\n            }\n            n[_validity] = fieldState.strategy.validity;\n            n.value = convertFieldValue(model, fieldState.value);\n          }\n        },\n        value: undefined,\n      };\n\n      if (!registry.has(model)) {\n        registry.set(model, fieldState);\n      }\n\n      if (fieldState.strategy) {\n        const valueFromField = convertFieldValue(model, fieldState.value);\n        if (valueFromField !== n.value && !(Number.isNaN(n.value) && Number.isNaN(valueFromField))) {\n          fieldState.value = n.value;\n          fieldState.strategy.value = n.value;\n        }\n\n        if (fieldState.required !== n.required) {\n          fieldState.required = n.required;\n          fieldState.strategy.required = n.required;\n        }\n\n        const firstError = n.ownErrors.at(0);\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        const errorMessage = firstError?.message ?? '';\n        if (fieldState.errorMessage !== errorMessage) {\n          fieldState.errorMessage = errorMessage;\n          fieldState.strategy.errorMessage = errorMessage;\n        }\n\n        // Make sure invalid state is always in sync\n        fieldState.invalid = n.invalid;\n        fieldState.strategy.invalid = n.invalid;\n      }\n\n      return {\n        name: n.name,\n        ref: fieldState.ref,\n      };\n    }) as FieldDirective;\n  }, [node]);\n}\n\ntype MutableBinderConfiguration<T> = {\n  -readonly [K in keyof BinderConfiguration<T>]: BinderConfiguration<T>[K];\n};\n\nexport function useForm<T, M extends AbstractModel<T>>(\n  Model: ModelConstructor<T, M>,\n  config?: BinderConfiguration<T>,\n): UseFormResult<T, M> {\n  const configRef = useRef<MutableBinderConfiguration<T>>({});\n  configRef.current.onSubmit = config?.onSubmit;\n  configRef.current.onChange = config?.onChange;\n  const update = useUpdate();\n  const binder = useMemo(() => new BinderRoot(Model, configRef.current), [Model]);\n  const field = useFields(binder);\n\n  useEffect(() => {\n    binder.addEventListener(CHANGED.type, update);\n  }, [binder]);\n\n  return {\n    ...getFormPart(binder),\n    clear: binder.clear.bind(binder),\n    field,\n    read: binder.read.bind(binder),\n    reset: binder.reset.bind(binder),\n    setDefaultValue: (defaultValue: T) => {\n      binder.defaultValue = defaultValue;\n    },\n    setValue: (value: T) => {\n      binder.value = value;\n    },\n    submit: binder.submit.bind(binder),\n    value: binder.value,\n  };\n}\n\nexport function useFormPart<M extends AbstractModel<any>>(model: M): UseFormPartResult<ReturnType<M['valueOf']>, M> {\n  const binderNode = getBinderNode(model);\n  const field = useFields(binderNode);\n  return {\n    ...getFormPart(binderNode),\n    field,\n  };\n}\n"]}